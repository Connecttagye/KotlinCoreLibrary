package ak.core.ui.compnents.toolbarimport ak.core.ui.constants.ComposeIconsListimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.widthimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.Menuimport androidx.compose.material.icons.filled.Notificationsimport androidx.compose.material.icons.filled.Personimport androidx.compose.material.icons.filled.Settingsimport androidx.compose.material3.ExperimentalMaterial3Apiimport androidx.compose.material3.Iconimport androidx.compose.material3.IconButtonimport androidx.compose.material3.LargeTopAppBarimport androidx.compose.material3.MaterialThemeimport androidx.compose.material3.Textimport androidx.compose.material3.TopAppBarDefaultsimport androidx.compose.material3.TopAppBarScrollBehaviorimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.alphaimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.sp@OptIn(ExperimentalMaterial3Api::class)@Composablefun Ak_ParallaxToolBar(    scrollBehavior: TopAppBarScrollBehavior,    title: String,    actions: @Composable () -> Unit) = LargeTopAppBar(   // modifier = Modifier.height(20.dp),    title = { Text(text = title,fontSize = 15.sp) },    navigationIcon = {        IconButton(onClick = {  }) {           Icon(imageVector = ComposeIconsList.ArrowBack,contentDescription = "الانتقال",)        }    },    colors = TopAppBarDefaults.largeTopAppBarColors(),    actions = { actions() },    scrollBehavior = scrollBehavior)@OptIn(ExperimentalMaterial3Api::class)@Composablefun CollapsingTopAppBar(    title: String,    onMenuClick: () -> Unit,    onNotificationsClick: () -> Unit,    onProfileClick: () -> Unit,    onSettingsClick: () -> Unit,    scrollBehavior: TopAppBarScrollBehavior,) {            LargeTopAppBar(                title = {                    Row(                        verticalAlignment = Alignment.CenterVertically,                    ) {                    // إظهار زر الرجوع فقط عندما يكون collapsedFraction أكبر من 0 (عند تصغير TopAppBar)                    if (scrollBehavior.state.collapsedFraction > 0f) {                        IconButton(onClick = {                        }) {                            Icon(                                imageVector = ComposeIconsList.ArrowForward_Icon,                                contentDescription = "رجوع",                                tint = MaterialTheme.colorScheme.onPrimary                            )                        }                        Spacer(modifier = Modifier.width(8.dp)) // مسافة بين زر الرجوع والعنوان                        // إظهار العنوان دائمًا                        Text(                            text = title,                            style = MaterialTheme.typography.labelMedium,                            fontWeight = FontWeight.Bold                        )                    }                    // إظهار العنوان دائمًا ولكن مع شفافية تتغير بناءً على collapsedFraction                    Text(                        text = "stringResource(id = R.string.app_name)",                        style = MaterialTheme.typography.headlineSmall,                        fontSize = 15.sp,                        fontWeight = FontWeight.Bold,                        modifier = Modifier.alpha(1f - scrollBehavior.state.collapsedFraction) // يختفي العنوان تدريجياً أثناء التمرير                    )                }                },                actions = {                    if (scrollBehavior.state.collapsedFraction == 0f) {                        IconButton(onClick = onMenuClick) {                            Icon(                                imageVector = Icons.Filled.Menu,                                contentDescription = "القائمة الرئيسية",                                )                        }                    }                },                navigationIcon = {                    if (scrollBehavior.state.collapsedFraction == 0f) {                        Row {                            IconButton(onClick = onNotificationsClick) {                                Icon(                                    imageVector = Icons.Filled.Notifications,                                    contentDescription = "الإشعارات",                                    )                            }                            IconButton(onClick = onProfileClick) {                                Icon(                                    imageVector = Icons.Filled.Person,                                    contentDescription = "البروفايل",                                    )                            }                            IconButton(onClick = onSettingsClick) {                                Icon(                                    imageVector = Icons.Filled.Settings,                                    contentDescription = "الإعدادات",                                    )                            }                        }                    }                },                scrollBehavior = scrollBehavior            )}